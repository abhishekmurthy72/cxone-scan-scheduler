# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# The Checkmarx One GitHub Action enables you to trigger SAST, SCA, and KICS scans directly from the GitHub workflow.
# It provides a wrapper around the Checkmarx One CLI Tool which creates a zip archive from your source code repository
# and uploads it to Checkmarx One for scanning. The Github Action provides easy integration with GitHub while enabling
# scan customization using the full functionality and flexibility of the CLI tool.

# This is a basic workflow to help you get started with Using Checkmarx One Action,
# documentation can be found here : https://checkmarx.com/resource/documents/en/34965-68702-checkmarx-one-github-actions.html

name: Checkmarx One Code Scanning Alerts

on:
  push:
     branches: 
         - main
         - master
         - dev
         
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [ "Terraform-project-1" ]

permissions:
  contents: read
  pull-requests: write  # <-- Add this line to allow PR decorations

jobs:
  build:
    permissions:
      contents: read # for actions/checkout to fetch code
      # security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      # actions: read # only required for a private repository by github/codeql-action/upload-sarif
      pull-requests: write # <-- Add this line to allow PR decorations

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkmarx One scan
        uses: checkmarx/ast-github-action@main
        with:
          base_uri: https://ind.ast.checkmarx.net
          cx_client_id: ${{ vars.CLIENT_ID }}
          cx_client_secret: ${{ secrets.SECRET }}
          cx_tenant: ${{ vars.TENANT }}
          additional_params: --report-format sarif --output-path .

      # - name: Upload SARIF file
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: cx_result.sarif
